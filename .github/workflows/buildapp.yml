name: Deploy application

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - build-triggered

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build Artifact
        run: mvn clean package

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: your-artifact-name
          path: target/onlinebookstore.war

  deploy_to_DEV:
    runs-on: ubuntu-20.04  # Specify a specific version of Ubuntu
    needs: [build]  # Ensure the 'build' job completes before deploying

    environment:
      name: DEV
      url: http://wwww.myapp.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
     
      - name: Copy Artifact to Runner
        run: |
         echo "helo world"

      - name: creating a file 
        run: |
          ls -l
          touch File1.txt 
          ls -l
         
  deploy_to_PROD:
    runs-on: ubuntu-latest
    environment: PROD
    needs: deploy_to_DEV 
     

    steps:      
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Copy Artifact to Runner
        run: |
         echo "deploy to prod"

      - name: Get the latest commit hash
        id: commit_hash
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"

      - name: Create Release Tag
        run: |
         latest_commit="${{ steps.commit_hash.outputs.hash }}"
         release_tag="release_1.0${latest_commit}"
         git tag -a $release_tag -m "Release $release_tag"
         git push origin $release_tag


  check_on_DEV:
     runs-on: ubuntu-20.04  # Specify a specific version of Ubuntu
     needs: deploy_to_PROD  # Ensure the 'build' job completes before deploying

     environment:
       name: DEV
       url: http://wwww.myapp.com

     steps:
      - name: File check
        run: ls -l

      

      
